name: CI/CD n8n - Build, Test, Push, Prepare et Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/n8n:latest
            ${{ secrets.DOCKER_USERNAME }}/n8n:${{ github.sha }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Test Docker image
        run: |
          docker run -d --name test_n8n -p 5678:5678 ${{ secrets.DOCKER_USERNAME }}/n8n:latest
          sleep 10
          if curl -fsS http://localhost:5678; then
            echo "Test réussi"
            docker stop test_n8n
            docker rm test_n8n
          else
            echo "Échec du test"
            docker logs test_n8n || true
            docker stop test_n8n || true
            docker rm test_n8n
            exit 1
          fi

  push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Push Docker image
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/n8n:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/n8n:${{ github.sha }}

  prepare_vps:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Prepare VPS
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 167.86.88.17  # Adresse IP en dur
          username: ${{ secrets.VPS_ADMIN_USER }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          port: 22
          script: |
            set -e

            # Installer Docker si absent
            if ! command -v docker > /dev/null; then
              apk add --no-cache curl bash
              curl -fsSL https://get.docker.com | sh
              addgroup docker
              adduser -D ${{ secrets.DEPLOY_USER }}
              adduser ${{ secrets.DEPLOY_USER }} docker
            fi

            # Créer le répertoire deploy
            mkdir -p /home/${{ secrets.DEPLOY_USER }}
            chown -R ${{ secrets.DEPLOY_USER }} /home/${{ secrets.DEPLOY_USER }}

            # Transférer et exécuter le script de déploiement
            scp -o StrictHostKeyChecking=no deploy_n8n.sh ${{ secrets.VPS_ADMIN_USER }}@167.86.88.17:/home/${{ secrets.DEPLOY_USER }}/deploy_n8n.sh
            ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_ADMIN_USER }}@167.86.88.17 "chmod +x /home/${{ secrets.DEPLOY_USER }}/deploy_n8n.sh"
            ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_ADMIN_USER }}@167.86.88.17 "/home/${{ secrets.DEPLOY_USER }}/deploy_n8n.sh ${{ secrets.DOCKER_USERNAME }}/n8n:latest"
