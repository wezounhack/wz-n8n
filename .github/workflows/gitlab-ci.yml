name: CI/CD n8n - Build, Test, Push, Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build --no-cache -t wezoun/n8n:latest .

      - name: List Docker images after build
        run: docker images

      - name: Verify image exists
        run: |
          if [[ "$(docker images -q wezoun/n8n:latest 2> /dev/null)" == "" ]]; then
            echo "L’image wezoun/n8n:latest n’a pas été construite correctement."
            exit 1
          fi

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Test Docker image
        run: |
          docker run -d --name test_n8n -p 5678:5678 wezoun/n8n:latest
          sleep 10
          if curl -fsS http://localhost:5678; then
            echo "Test réussi"
            docker stop test_n8n
            docker rm test_n8n
          else
            echo "Échec du test"
            docker logs test_n8n || true
            docker stop test_n8n || true
            docker rm test_n8n
            exit 1
          fi

  push:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: List Docker images before push
        run: docker images

      - name: Verify image exists before push
        run: |
          if [[ "$(docker images -q wezoun/n8n:latest 2> /dev/null)" == "" ]]; then
            echo "L’image wezoun/n8n:latest n’a pas été construite correctement."
            exit 1
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push wezoun/n8n:latest

  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Transfer and run deploy script
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 167.86.88.17 # IP dur
          username: ${{ secrets.VPS_ADMIN_USER }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          port: 22
          script: |
            set -e
            scp -o StrictHostKeyChecking=no deploy_n8n.sh ${DEPLOY_USER}@167.86.88.17:/home/${DEPLOY_USER}/deploy_n8n.sh
            ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@167.86.88.17 "chmod +x /home/${DEPLOY_USER}/deploy_n8n.sh"
            ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@167.86.88.17 "/home/${DEPLOY_USER}/deploy_n8n.sh wezoun/n8n:latest"
